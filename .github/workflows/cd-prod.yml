name: CD - Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  ENVIRONMENT: prod
  AZURE_REGION: eastus
  TERRAFORM_VERSION: '1.6.0'

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy to Production
    
    environment:
      name: production
      url: ${{ steps.deploy.outputs.app_url }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
    
    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Setup Terraform Backend
      working-directory: terraform
      run: |
        terraform init \
          -backend-config="resource_group_name=${{ secrets.TERRAFORM_STATE_RG }}" \
          -backend-config="storage_account_name=${{ secrets.TERRAFORM_STATE_SA }}" \
          -backend-config="container_name=tfstate" \
          -backend-config="key=${{ env.ENVIRONMENT }}.terraform.tfstate"
    
    - name: Terraform Plan
      id: plan
      working-directory: terraform
      run: |
        terraform plan \
          -var-file="environments/${{ env.ENVIRONMENT }}.tfvars" \
          -var="container_image=ghcr.io/${{ github.repository }}:${{ github.sha }}" \
          -var="database_connection_string=${{ secrets.DATABASE_CONNECTION_STRING_PROD }}" \
          -var="jwt_key=${{ secrets.JWT_KEY_PROD }}" \
          -out=tfplan
    
    - name: Terraform Apply
      id: deploy
      working-directory: terraform
      run: |
        terraform apply -auto-approve tfplan
        echo "app_url=$(terraform output -raw container_app_url)" >> $GITHUB_OUTPUT
    
    - name: Run Database Migrations
      run: |
        # Aqu√≠ puedes agregar comandos para ejecutar migraciones
        echo "Database migrations would run here"